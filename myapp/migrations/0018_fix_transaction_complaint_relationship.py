# Generated by Django 5.1.6 on 2025-08-21 03:25

from django.db import migrations


def link_transactions_to_complaints(apps, schema_editor):
    """Link existing transactions to their corresponding complaints"""
    Transaction = apps.get_model('myapp', 'Transaction')
    Complaint = apps.get_model('myapp', 'Complaint')
    
    # For each transaction, try to find the corresponding complaint
    for transaction in Transaction.objects.all():
        if not transaction.complaint_id:
            # Try to find complaint by matching common fields
            try:
                complaint = Complaint.objects.get(
                    barangay=transaction.barangay,
                    complaint_type=transaction.complaint_type,
                    description=transaction.description,
                    location=transaction.location
                )
                transaction.complaint = complaint
                transaction.save()
                print(f"Linked transaction {transaction.transaction_id} to complaint {complaint.tracking_id}")
            except Complaint.DoesNotExist:
                print(f"Could not find matching complaint for transaction {transaction.transaction_id}")
            except Complaint.MultipleObjectsReturned:
                print(f"Multiple complaints found for transaction {transaction.transaction_id}")


def reverse_link_transactions(apps, schema_editor):
    """Reverse operation - unlink transactions from complaints"""
    Transaction = apps.get_model('myapp', 'Transaction')
    Transaction.objects.all().update(complaint=None)


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0017_add_transaction_model'),
    ]

    operations = [
        migrations.RunPython(link_transactions_to_complaints, reverse_link_transactions),
    ]
